# CONFIGURACIÓN PARA GOOGLE CLOUD RUN (Firebase) + MongoDB Atlas
# ==================================================================================
# INSTRUCCIONES:
# 1. Copia este archivo como "application-firebase.properties" (sin .example)
# 2. Configura los valores con tus credenciales reales
# 3. NUNCA subas el archivo real a GitHub (ya está en .gitignore)
# ==================================================================================

# Configuración de seguridad JWT
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-here}
jwt.expiration=86400000

# Base de datos MongoDB Atlas
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/db_fproject}
spring.data.mongodb.database=${MONGODB_DATABASE:db_fproject}

# Configuración de servidor
server.port=${PORT:8080}

# Configuración CORS (permitir desde cualquier origen para desarrollo)
cors.allowed.origins=*

# Configuración de Calendarific (obtener en: https://calendarific.com/api-documentation)
calendarific.api.key=${CALENDARIFIC_API_KEY:your-calendarific-api-key-here}

# Configuración de Firebase
firebase.credentials.path=${FIREBASE_CREDENTIALS_PATH:}
firebase.project.id=${FIREBASE_PROJECT_ID:your-firebase-project-id}

# Configuración de logs
logging.level.com.proyectofinal=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.data.mongodb=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Deshabilitar JPA (no necesario con MongoDB)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

# Health check para Cloud Run
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always 